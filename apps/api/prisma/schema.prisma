generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String         @id @default(uuid())
  email           String         @unique
  passwordHash    String?
  name            String?
  roles           Role[]
  refreshTokens   RefreshToken[]
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  isEmailVerified Boolean        @default(false)
  // relations
  products        Product[]      @relation("ProductsByUser")
  orders          Order[]        @relation("OrdersByUser")
}

model Role {
  id    String @id @default(uuid())
  name  String @unique
  users User[]
}

model RefreshToken {
  id        String   @id @default(uuid())
  tokenHash String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  expiresAt DateTime
  createdAt DateTime @default(now())
}

model Product {
  id          String   @id @default(uuid())
  title       String
  description String?
  price       Float
  stock       Int      @default(0)
  owner       User?    @relation("ProductsByUser", fields: [ownerId], references: [id])
  ownerId     String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Order {
  id        String      @id @default(uuid())
  user      User        @relation("OrdersByUser", fields: [userId], references: [id])
  userId    String
  total     Float
  status    OrderStatus @default(PENDING)
  createdAt DateTime    @default(now())
  items     OrderItem[]
}

model OrderItem {
  id        String @id @default(uuid())
  order     Order  @relation(fields: [orderId], references: [id])
  orderId   String
  productId String
  quantity  Int
  price     Float
}

enum OrderStatus {
  PENDING
  PAID
  FULFILLED
  CANCELLED
  REFUNDED
}
